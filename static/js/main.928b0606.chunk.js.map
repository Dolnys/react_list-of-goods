{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleReverse","setState","prevState","handleSort","handleReset","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,cAAgB,WACd,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAEL,YAAaK,EAAUL,gBAP3D,EAUEM,WAAa,SAACL,GACZ,EAAKG,SAAS,CAAEH,cAXpB,EAcEM,YAAc,WACZ,EAAKH,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAfzD,4CAkBE,WAAU,IAAD,OACDQ,EA9CH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNQ,EAAY,YAAOC,GAczB,OAVIR,IAAaL,EAASc,SACxBF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCZ,IAAaL,EAASmB,QAC/BP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvChB,GACFQ,EAAaS,UAGRT,EA2BgBU,CAAkBrB,EAAiB,CACtDI,SAAUkB,KAAKpB,MAAME,SACrBD,WAAYmB,KAAKpB,MAAMC,aAGzB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPD,KAAKpB,MAAME,WAAaL,EAASc,SAAW,GAAK,YAEnDY,QAAS,kBAAM,EAAKhB,WAAWV,EAASc,WAL1C,iCAUA,wBACEW,KAAK,SACLD,UAAS,4BACPD,KAAKpB,MAAME,WAAaL,EAASmB,OAAS,GAAK,YAEjDO,QAAS,kBAAM,EAAKhB,WAAWV,EAASmB,SAL1C,4BAUA,wBACEM,KAAK,SACLD,UAAS,6BACPD,KAAKpB,MAAMC,WAAa,GAAK,YAE/BsB,QAASH,KAAKhB,cALhB,sBASEgB,KAAKpB,MAAME,WAAaL,EAASM,MAAQiB,KAAKpB,MAAMC,aACpD,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKZ,YAHhB,sBAUJ,6BACE,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAtEtC,GAAyBC,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.928b0606.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleReverse = () => {\n    this.setState((prevState) => ({ isReversed: !prevState.isReversed }));\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const visibleGoods = getReorderedGoods(goodsFromServer, {\n      sortType: this.state.sortType,\n      isReversed: this.state.isReversed,\n    });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${\n              this.state.sortType === SortType.ALPHABET ? '' : 'is-light'\n            }`}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${\n              this.state.sortType === SortType.LENGTH ? '' : 'is-light'\n            }`}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning  ${\n              this.state.isReversed ? '' : 'is-light'\n            }`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map((good) => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}